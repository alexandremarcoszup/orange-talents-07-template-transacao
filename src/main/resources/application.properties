#datasource
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/transacao}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DATABASE_USERNAME:agamin}
spring.datasource.password=${DATABASE_PASSWORD:2020}
spring.jpa.generate-ddl=true


# jpa
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.hibernate.ddl-auto=update

#feign
feign.client.config.analise.read-timeout=100
feign.client.config.analise.connect-timeout=100

#URL da API de cartoes
api.cartoes.url=${CARTAO_API:http://localhost:7777/api}

#Kafka
#Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
#Para String
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#Para receber JSON
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#Grupo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:transacoes}
#Topico
spring.kafka.topic.transactions=${KAFKA_TOPIC:transacoes}
#Modo de coleta do consumer -> [latest, earliest, none]
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

# keycloak
keycloak.realm  = ${KEYCLOCK_REALM:AGAMIN}
keycloak.auth-server-url  = ${KEYCLOCK_SERVER_URL:http://localhost:18080/auth}
keycloak.ssl-required = ${KEYCLOCK_SSL:external}
keycloak.resource = ${KEYCLOCK_RESOURCE:agaminapp-transacao}
keycloak.credentials.secret = ${KEYCLOCK_SECRET:2020}
keycloak.use-resource-role-mappings = ${KEYCLOCK_ROLE_MAPPING:true}
keycloak.bearer-only= true


